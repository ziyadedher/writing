import datetime
from typing import Final

import csv
import pathlib


import dateutil.parser
import typer
from loguru import logger
from alive_progress import alive_bar


SITE_HEADER: Final[str] = "site"
CONTACT_HEADER: Final[str] = "contact"
EXPIRES_HEADER: Final[str] = "expires"


def main(
    results_path: pathlib.Path = typer.Argument(
        ..., help="Path to the results file generated by `preprocess.py`"
    ),
) -> None:
    logger.info(f"Reading from {results_path}...")

    google = 0
    non_google = 0

    no_expires = 0
    expired = []
    not_expired = 0

    with open(results_path, "r") as results_file, alive_bar() as bar:
        reader = csv.DictReader(results_file)
        for line in reader:
            contact = line[CONTACT_HEADER]
            if any(s in contact for s in ("g.co", "google.com")):
                google += 1
            else:
                non_google += 1

            expires = line[EXPIRES_HEADER]
            if not expires:
                no_expires += 1
            else:
                try:
                    expires_parsed = dateutil.parser.parse(expires)
                except ValueError:
                    logger.warning(f"could not parse expires field: {expires}")
                    continue
                if expires_parsed < datetime.datetime.now(expires_parsed.tzinfo):
                    expired.append(line[SITE_HEADER])
                else:
                    not_expired += 1

    print(f"{google=}\n{non_google=}")
    print(f"{no_expires=}\n{len(expired)=}\n{expired=}\n{not_expired=}")


if __name__ == "__main__":
    typer.run(main)
